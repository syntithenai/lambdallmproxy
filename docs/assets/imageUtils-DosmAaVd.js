async function h(e,a=1200){try{if(e.startsWith("data:"))return e;try{const n=await fetch("/proxy-image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({url:e,format:"base64"})});if(n.ok){const t=await n.json();if(t.success&&t.dataUri){console.log(`✅ Image fetched via backend proxy (proxy: ${t.usedProxy})`);const i=await(await fetch(t.dataUri)).blob();return await d(i,a)}}}catch(c){console.warn("Backend proxy fetch failed, trying direct:",c)}console.log("ℹ️ Falling back to direct image fetch");const r=await fetch(e,{mode:"cors",credentials:"omit"});if(!r.ok)throw new Error(`Failed to fetch image: ${r.status}`);const o=await r.blob();return await d(o,a)}catch(r){return console.warn(`Failed to convert image to base64: ${e}`,r),e}}async function d(e,a=1200){return new Promise((r,o)=>{const c=new FileReader;c.onload=()=>{const n=new Image;n.onload=()=>{let t=n.width,s=n.height;(t>a||s>a)&&(t>s?(s=Math.round(s*a/t),t=a):(t=Math.round(t*a/s),s=a));const i=document.createElement("canvas");i.width=t,i.height=s;const l=i.getContext("2d");if(!l){o(new Error("Failed to get canvas context"));return}l.drawImage(n,0,0,t,s);const g=i.toDataURL("image/jpeg",.85);r(g)},n.onerror=()=>o(new Error("Failed to load image")),n.src=c.result},c.onerror=()=>o(new Error("Failed to read blob")),c.readAsDataURL(e)})}async function w(e,a=3,r=1200){const o=new Array(e.length);let c=0;const n=async()=>{if(c>=e.length)return;const s=c++,i=e[s];try{o[s]=await h(i,r)}catch(l){console.warn(`Failed to convert image ${s}:`,l),o[s]=i}await n()},t=Array.from({length:Math.min(a,e.length)},()=>n());return await Promise.all(t),o}function f(e){const a=[],r=/<img[^>]+src=["']([^"']+)["']/gi;let o;for(;(o=r.exec(e))!==null;)a.push(o[1]);return a}function u(e,a){let r=e;return a.forEach((o,c)=>{const n=c.replace(/[.*+?^${}()|[\]\\]/g,"\\$&"),t=new RegExp(`src=["']${n}["']`,"gi");r=r.replace(t,`src="${o}"`)}),r}async function m(e,a=3,r=1200){const o=f(e);if(o.length===0)return e;const c=await w(o,a,r),n=new Map;return o.forEach((t,s)=>{n.set(t,c[s])}),u(e,n)}export{d as blobToBase64WithResize,m as convertHtmlImagesToBase64,w as convertImagesToBase64,f as extractImageUrls,h as imageUrlToBase64,u as replaceImageUrlsWithBase64};
