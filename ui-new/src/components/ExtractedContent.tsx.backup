import React, { useState } from 'react';

interface Link {
  title: string;
  url: string;
  snippet?: string;
  isSearchResult?: boolean;
}

interface Image {
  src: string;
  alt: string;
  source: string;
}

interface Video {
  src: string;
  title: string;
  source: string;
}

interface Media {
  src: string;
  type: string;
  source: string;
}

interface ExtractedContentProps {
  extractedContent: {
    // Prioritized content (inline, not expandable)
    prioritizedLinks?: Link[];
    prioritizedImages?: Image[];
    
    // Media sections (expanded by default)
    youtubeVideos?: Video[];
    otherVideos?: Video[];
    media?: Media[];
    
    // Expandable sections
    allLinks?: Link[];
    allImages?: Image[];
    
    // Legacy fields
    sources?: Link[];
    images?: Image[];
  };
}

const ExtractedContent: React.FC<ExtractedContentProps> = ({ extractedContent }) => {
  const [hiddenImages, setHiddenImages] = React.useState<Set<number>>(new Set());

  if (!extractedContent) return null;

  const { 
    prioritizedLinks,
    prioritizedImages,
    youtubeVideos,
    otherVideos,
    media,
    allLinks,
    allImages
  } = extractedContent;

  const hasContent = prioritizedLinks || prioritizedImages || youtubeVideos || otherVideos || media || allLinks || allImages;

  if (!hasContent) return null;

  const handleImageError = (idx: number) => {
    setHiddenImages(prev => new Set(prev).add(idx));
  };

  return (
    <div className="extracted-content" style={{ marginTop: '1.5rem', fontSize: '0.9rem', lineHeight: '1.6' }}>
      {/* Prioritized Links (inline, seamless with content) */}
      {prioritizedLinks && prioritizedLinks.length > 0 && (
        <div style={{ 
          marginBottom: '1.5rem',
          padding: '1rem',
          backgroundColor: '#f8f9fa',
          borderRadius: '8px',
          borderLeft: '4px solid #0066cc'
        }}>
          <div style={{ fontWeight: '600', marginBottom: '0.75rem', color: '#333' }}>
            üìö References & Sources
          </div>
          <div style={{ display: 'flex', flexDirection: 'column', gap: '0.5rem' }}>
            {prioritizedLinks.map((link, idx) => (
              <div key={idx} style={{ display: 'flex', alignItems: 'baseline', gap: '0.5rem' }}>
                <span style={{ color: '#666', fontSize: '0.85rem', minWidth: '1.5rem' }}>
                  {idx + 1}.
                </span>
                <a 
                  href={link.url} 
                  target="_blank" 
                  rel="noopener noreferrer" 
                  style={{ 
                    color: '#0066cc', 
                    textDecoration: 'none',
                    flex: 1
                  }}
                  onMouseEnter={(e) => e.currentTarget.style.textDecoration = 'underline'}
                  onMouseLeave={(e) => e.currentTarget.style.textDecoration = 'none'}
                >
                  {link.title}
                </a>
              </div>
            ))}
          </div>
        </div>
      )}

      {/* Prioritized Images (top 3, inline) */}
      {prioritizedImages && prioritizedImages.length > 0 && (
        <details style={{ marginBottom: '0.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', padding: '0.5rem', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
            üìã Complete Source List ({sources.length} link{sources.length !== 1 ? 's' : ''})
          </summary>
          <div style={{ padding: '0.5rem', paddingLeft: '1rem' }}>
            {sources.map((source, idx) => (
              <div key={idx} style={{ marginBottom: '0.75rem' }}>
                <div>
                  {idx + 1}. <a href={source.url} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {source.title}
                  </a>
                </div>
                {source.snippet && (
                  <blockquote style={{ margin: '0.25rem 0 0 1rem', padding: '0.25rem 0.5rem', borderLeft: '3px solid #ccc', color: '#666', fontStyle: 'italic', fontSize: '0.85rem' }}>
                    {source.snippet}...
                  </blockquote>
                )}
              </div>
            ))}
          </div>
        </details>
      )}

      {/* Extracted Images */}
      {images && images.length > 0 && (
        <details style={{ marginBottom: '0.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', padding: '0.5rem', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
            üñºÔ∏è Extracted Images ({images.length} image{images.length !== 1 ? 's' : ''})
          </summary>
          <div style={{ padding: '0.5rem', paddingLeft: '1rem', display: 'grid', gridTemplateColumns: 'repeat(auto-fill, minmax(200px, 1fr))', gap: '1rem' }}>
            {images.map((image, idx) => (
              <figure key={idx} style={{ margin: 0 }}>
                <img 
                  src={image.src} 
                  alt={image.alt} 
                  loading="lazy"
                  style={{ width: '100%', height: 'auto', borderRadius: '4px', border: '1px solid #ddd' }}
                  onError={(e) => {
                    (e.target as HTMLImageElement).style.display = 'none';
                  }}
                />
                <figcaption style={{ fontSize: '0.8rem', color: '#666', marginTop: '0.25rem' }}>
                  {idx + 1}. {image.alt}<br />
                  <a href={image.source} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc', fontSize: '0.75rem' }}>
                    Source
                  </a>
                </figcaption>
              </figure>
            ))}
          </div>
        </details>
      )}

      {/* YouTube Videos */}
      {youtubeVideos && youtubeVideos.length > 0 && (
        <details style={{ marginBottom: '0.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', padding: '0.5rem', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
            üì∫ YouTube Videos ({youtubeVideos.length} video{youtubeVideos.length !== 1 ? 's' : ''})
          </summary>
          <div style={{ padding: '0.5rem', paddingLeft: '1rem' }}>
            {youtubeVideos.map((video, idx) => (
              <div key={idx} style={{ marginBottom: '0.75rem' }}>
                <div>
                  {idx + 1}. <a href={video.src} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {video.title}
                  </a>
                </div>
                <div style={{ fontSize: '0.8rem', color: '#666', marginLeft: '1rem' }}>
                  Source: <a href={video.source} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {video.source}
                  </a>
                </div>
              </div>
            ))}
          </div>
        </details>
      )}

      {/* Other Videos */}
      {otherVideos && otherVideos.length > 0 && (
        <details style={{ marginBottom: '0.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', padding: '0.5rem', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
            üé¨ Other Videos ({otherVideos.length} video{otherVideos.length !== 1 ? 's' : ''})
          </summary>
          <div style={{ padding: '0.5rem', paddingLeft: '1rem' }}>
            {otherVideos.map((video, idx) => (
              <div key={idx} style={{ marginBottom: '0.75rem' }}>
                <div>
                  {idx + 1}. <a href={video.src} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {video.title}
                  </a>
                </div>
                <div style={{ fontSize: '0.8rem', color: '#666', marginLeft: '1rem' }}>
                  Source: <a href={video.source} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {video.source}
                  </a>
                </div>
              </div>
            ))}
          </div>
        </details>
      )}

      {/* Other Media */}
      {media && media.length > 0 && (
        <details style={{ marginBottom: '0.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 'bold', padding: '0.5rem', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>
            üéµ Other Media ({media.length} item{media.length !== 1 ? 's' : ''})
          </summary>
          <div style={{ padding: '0.5rem', paddingLeft: '1rem' }}>
            {media.map((item, idx) => (
              <div key={idx} style={{ marginBottom: '0.75rem' }}>
                <div>
                  {idx + 1}. <a href={item.src} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {item.type}
                  </a>
                </div>
                <div style={{ fontSize: '0.8rem', color: '#666', marginLeft: '1rem' }}>
                  Type: {item.type}<br />
                  Source: <a href={item.source} target="_blank" rel="noopener noreferrer" style={{ color: '#0066cc' }}>
                    {item.source}
                  </a>
                </div>
              </div>
            ))}
          </div>
        </details>
      )}
    </div>
  );
};

export default ExtractedContent;
